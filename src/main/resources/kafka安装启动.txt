上传kafka_2.11-1.0.1.tgz

解压后进入目录

tar -xzvf kafka_2.11-1.0.1.tgz

vi config/server.properties
修改项如下：
listeners=PLAINTEXT://你的ip:9092
advertised.listeners=PLAINTEXT://你的ip:9092
zookeeper.connect=你的ip:2181
zookeeper.session.timeout.ms=60000
添加如下：
session.timeout.ms=20000
heartbeat.interval.ms=6000
group.min.session.timeout.ms=3000
group.max.session.timeout.ms=30000
max.poll.records=500
num.replica.fetchers=2

--添加系统配置
vi /etc/security/limits.conf
* soft nofile 65536
* hard nofile 65536
* soft nproc 131072
* hard nproc 131072
--- 帮助信息
bin/kafka-topics.sh --help

---启动
启动zookeeper：nohup bin/zookeeper-server-start.sh config/zookeeper.properties 1>zookeeper.log 2>zookeeper.err &
启动kafka：nohup bin/kafka-server-start.sh -daemon config/server.properties 2>output &

---创建topic 并查看
创建topic：/root/kafka_2.11-1.1.1/bin/kafka-topics.sh --create --topic (topic的名字自己改) --replication-factor 1 --partitions 1 --zookeeper 127.0.0.1:2181
查看list：/root/kafka_2.11-1.1.1/bin/kafka-topics.sh --zookeeper 127.0.0.1:2181 --list
删除特定的topic: /root/kafka_2.11-1.1.1/bin/kafka-topics.sh --delete --zookeeper 127.0.0.1:2181 --topic 702803
bin/kafka-topics.sh --delete --zookeeper 127.0.0.1:2181 --topic ddddddd

---修改指定topic信息
bin/kafka-topics.sh --zookeeper 192.168.187.146:2181 --alter --topic test0 --config max.message.bytes=128000
bin/kafka-topics.sh --zookeeper 192.168.187.146:2181 --alter --topic test0 --delete-config max.message.bytes
bin/kafka-topics.sh --zookeeper 127.0.0.1:2181 --alter --topic 963672 --partitions 4
bin/kafka-topics.sh --zookeeper 192.168.187.146:2181 --alter --topic test0 --partitions 3 ## Kafka分区数量只允许增加，不允许减少

--- 查看kafka描述信息
bin/kafka-topics.sh --describe --zookeeper 127.0.0.1:2181  --topic 963672

/root/kafka_2.11-1.1.1/bin/kafka-topics.sh --zookeeper 127.0.0.1:2181 --topic SDNGateway --describe





使用kafka命令查询消费分区的详情时，使用127.0.0.1不行的时候就采用实际ip
--new-consumer 马上回被废弃，使用时，可以尝试有或者没有

老的
/root/kafka_2.11-1.1.1/bin/kafka-consumer-groups.sh --new-consumer --zookeeper 127.0.0.1:2181 --bootstrap-server 127.0.0.1:9292 --list
这个在58的机子上可以
bin/kafka-consumer-groups.sh --bootstrap-server 172.31.35.58:9092  --list

bin/kafka-consumer-groups.sh --bootstrap-server 172.31.35.58:9092  --list | awk '{print $1;}' | | xargs -I ar bin/kafka-consumer-groups.sh --bootstrap-server 172.31.35.58:9092
--describe --group ar


新的
/root/kafka_2.11-1.1.1/bin/kafka-consumer-groups.sh --new-consumer --bootstrap-server 192.168.223.100:9092,192.168.223.101:9092,192.168.223.102:9092 --list

/root/kafka_2.11-1.1.1/bin/kafka-consumer-groups.sh --new-consumer --bootstrap-server 192.168.223.100:9092,192.168.223.101:9092,192.168.223.102:9092 --group
serverCollectorff1aff28f9e94c779b20a5f77338ae9b --describe

---kafka-manager监控平台
上传kafka-manager-1.3.3.18.zip
unzip kafka-manager-1.3.3.18.zip
修改conf/application.conf
kafka-manager.zkhosts=(xxxx:2181)
新建文件start-kafka-manager.sh
文件内容
nohup /root/kafka-manager-1.3.3.18/bin/kafka-manager -Dconfig.file=/root/kafka-manager-1.3.3.18/conf/application.conf -Dhttp.port=33433 > /dev/null 2>&1 &
保存执行sh文件启动
sh start-kafka-manager.sh

--查看消费情况
bin/kafka-consumer-groups.sh --bootstrap-server 172.31.35.58:9092 --describe --group serverCollector
bin/kafka-consumer-groups.sh --bootstrap-server 172.31.35.58:9092 --describe --group serverCollectoraf853a07a4ab4e53b6fdecbddc1c5da6
-- 删除消费组
/root/kafka_2.11-1.1.1/bin/kafka-consumer-groups.sh --bootstrap-server 192.168.223.100:9092,192.168.223.101:9092,192.168.223.102:9092 --delete --group serverCollectorad22d2557f9e4059bc11af9294ed6bec
-- 查看状态
bin/kafka-consumer-groups.sh --bootstrap-server 172.31.35.58:9092 --describe --state --group serverCollectord447ac07c4424b009aacd7e64516dd3d
-- 查看活跃的组成员
bin/kafka-consumer-groups.sh --bootstrap-server 172.31.35.58:9092 --describe --members --group serverCollectorf2f92d43053f47ada584861f89715e13
-- 重设偏移量
bin/kafka-consumer-groups.sh --bootstrap-server 172.31.35.58:9092 --execute --reset-offsets --to-earliest --topic SDNGateway3 --group serverCollectord447ac07c4424b009aacd7e64516dd3d
/root/kafka_2.11-1.1.1/bin/kafka-consumer-groups.sh --bootstrap-server 192.168.223.100:9092,192.168.223.101:9092,192.168.223.102:9092 --execute --reset-offsets --to-offset 21000 --topic log_huawei
--group
serverCollectorfd94061068d94c879fe842085889599b





browserCollector
appCollector
Flink
单独topic
bin/kafka-topics.sh --zookeeper 172.31.35.23:2181 --topic (xxxxxxxxxxxx) --describe

停止kafka
bin/kafka-server-stop.sh

停止zookeeper
bin/zookeeper-server-stop.sh

看kafka是否启动
netstat -tpnl|grep 9092


--报错
kafka.common.KafkaException: Failed to acquire lock on file .lock in /tmp/kafka-logs. A Kafka instance in another process or thread is using this directory.
删除文件
$ rm -rf /tmp/kafka-logs

kafka.common.KafkaException: Socket server failed to bind to 10.20.1.154:9092: Cannot assign requested address
解决方法也很简单，listeners=PLAINTEXT://10.20.1.153:9092中的ip改为真实ip[ifconfig中显示的ip]即可，其他使用时正常使用对外ip即可，跟真实ip就没有关系了。

--集群安装
config/zookeeper.properties
添加以下内容
dataLogDir=/tmp/zookeeper/log
tickTime=2000
initLimit=5
syncLimit=2
server.1=172.31.24.30:2888:3888 #有几个服务器改几个server
server.2=172.31.24.36:2888:3888
添加myid文件
/tmp/zookeeper/目录下创建myid文件 内容为server编号（server.1=172.............）就写个1

所有节点的zookeeper都启动再起kafka服务

config/server.properties
修改以下内容
broker.id=0 （从0开始 一个节点+1）
zookeeper.connect=172.31.24.30:2181,172.31.24.36:2181 （每个节点都填上）

启动所有kafka节点

Done!


;E:\Asunjihua\phython;E:\Asunjihua\phython\Scripts\;E:\Asunjihua\phython\Lib\site-packages\;%STORM_HOME%\bin;C:\Users\xiaorong\Desktop\nc;E:\Asunjihua\git\Git\usr\bin\ssh-keygen.exe


